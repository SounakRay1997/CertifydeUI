{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".multiSelectContainer,.multiSelectContainer *,.multiSelectContainer :after,.multiSelectContainer :before{box-sizing:border-box}.multiSelectContainer{position:relative;text-align:left;width:100%}.disable_ms{pointer-events:none;opacity:.5}.display-none{display:none}.searchWrapper{border:1px solid #ccc;border-radius:4px;padding:5px;min-height:22px;position:relative}.multiSelectContainer input{border:none;margin-top:3px;background:transparent}.multiSelectContainer input:focus{outline:none}.chip{padding:4px 10px;background:#0096fb;margin-right:5px;margin-bottom:5px;border-radius:11px;display:inline-flex;align-items:center;font-size:13px;line-height:19px;color:#fff}.chip,.singleChip{white-space:nowrap}.singleChip{background:none;border-radius:none;color:inherit}.singleChip i{display:none}.closeIcon{height:13px;width:13px;float:right;margin-left:5px;cursor:pointer}.optionListContainer{position:absolute;width:100%;background:#fff;border-radius:4px;margin-top:1px;z-index:2}.multiSelectContainer ul{display:block;padding:0;margin:0;border:1px solid #ccc;border-radius:4px;max-height:250px;overflow-y:auto}.multiSelectContainer li{padding:10px}.multiSelectContainer li:hover{background:#0096fb;color:#fff;cursor:pointer}.checkbox{margin-right:10px}.disableSelection{pointer-events:none;opacity:.5}.highlightOption{background:#0096fb;color:#fff}.displayBlock{display:block}.displayNone{display:none}.notFound{padding:10px;display:block}.singleSelect{padding-right:20px}li.groupHeading{color:#908e8e;pointer-events:none;padding:5px 15px}li.groupChildEle{padding-left:30px}.icon_down_dir{position:absolute;right:10px;top:50%;transform:translateY(-50%);width:14px}.icon_down_dir:before{content:\\\"\\\\e803\\\"}.custom-close{display:flex}\";\nstyleInject(css_248z);\nvar CloseCircle = \"data:image/svg+xml,%3Csvg%20viewBox%3D%220%200%2096%2096%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20%20%20%20%20%20%20%20.st0%7B%20%20%20%20%20%20%20%20%20%20%20%20fill%3A%23fff%3B%20%20%20%20%20%20%20%20%7D%20%3C%2Fstyle%3E%20%20%20%20%3Cg%3E%20%20%20%20%20%20%20%20%3Cpath%20class%3D%22st0%22%20d%3D%22M48%2C0A48%2C48%2C0%2C1%2C0%2C96%2C48%2C48.0512%2C48.0512%2C0%2C0%2C0%2C48%2C0Zm0%2C84A36%2C36%2C0%2C1%2C1%2C84%2C48%2C36.0393%2C36.0393%2C0%2C0%2C1%2C48%2C84Z%22%2F%3E%20%20%20%20%20%20%20%20%3Cpath%20class%3D%22st0%22%20d%3D%22M64.2422%2C31.7578a5.9979%2C5.9979%2C0%2C0%2C0-8.4844%2C0L48%2C39.5156l-7.7578-7.7578a5.9994%2C5.9994%2C0%2C0%2C0-8.4844%2C8.4844L39.5156%2C48l-7.7578%2C7.7578a5.9994%2C5.9994%2C0%2C1%2C0%2C8.4844%2C8.4844L48%2C56.4844l7.7578%2C7.7578a5.9994%2C5.9994%2C0%2C0%2C0%2C8.4844-8.4844L56.4844%2C48l7.7578-7.7578A5.9979%2C5.9979%2C0%2C0%2C0%2C64.2422%2C31.7578Z%22%2F%3E%20%20%20%20%3C%2Fg%3E%3C%2Fsvg%3E\";\nvar CloseCircleDark = \"data:image/svg+xml,%3Csvg%20height%3D%22512px%22%20id%3D%22Layer_1%22%20style%3D%22enable-background%3Anew%200%200%20512%20512%3B%22%20version%3D%221.1%22%20viewBox%3D%220%200%20512%20512%22%20width%3D%22512px%22%20xml%3Aspace%3D%22preserve%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20%20%20%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20%20%20%20%20%20%20%20.st0%7B%20%20%20%20%20%20%20%20%20%20%20%20fill%3A%23fff%3B%20%20%20%20%20%20%20%20%7D%20%3C%2Fstyle%3E%20%20%20%20%3Cg%3E%20%20%20%20%20%20%20%20%3Cpath%20class%3D%22st0%22%20d%3D%22M256%2C33C132.3%2C33%2C32%2C133.3%2C32%2C257c0%2C123.7%2C100.3%2C224%2C224%2C224c123.7%2C0%2C224-100.3%2C224-224C480%2C133.3%2C379.7%2C33%2C256%2C33z%20%20%20%20M364.3%2C332.5c1.5%2C1.5%2C2.3%2C3.5%2C2.3%2C5.6c0%2C2.1-0.8%2C4.2-2.3%2C5.6l-21.6%2C21.7c-1.6%2C1.6-3.6%2C2.3-5.6%2C2.3c-2%2C0-4.1-0.8-5.6-2.3L256%2C289.8%20%20%20l-75.4%2C75.7c-1.5%2C1.6-3.6%2C2.3-5.6%2C2.3c-2%2C0-4.1-0.8-5.6-2.3l-21.6-21.7c-1.5-1.5-2.3-3.5-2.3-5.6c0-2.1%2C0.8-4.2%2C2.3-5.6l75.7-76%20%20%20l-75.9-75c-3.1-3.1-3.1-8.2%2C0-11.3l21.6-21.7c1.5-1.5%2C3.5-2.3%2C5.6-2.3c2.1%2C0%2C4.1%2C0.8%2C5.6%2C2.3l75.7%2C74.7l75.7-74.7%20%20%20c1.5-1.5%2C3.5-2.3%2C5.6-2.3c2.1%2C0%2C4.1%2C0.8%2C5.6%2C2.3l21.6%2C21.7c3.1%2C3.1%2C3.1%2C8.2%2C0%2C11.3l-75.9%2C75L364.3%2C332.5z%22%2F%3E%20%20%20%20%3C%2Fg%3E%3C%2Fsvg%3E\";\nvar CloseLine = \"data:image/svg+xml,%3Csvg%20height%3D%22512px%22%20id%3D%22Layer_1%22%20style%3D%22enable-background%3Anew%200%200%20512%20512%3B%22%20version%3D%221.1%22%20viewBox%3D%220%200%20512%20512%22%20width%3D%22512px%22%20xml%3Aspace%3D%22preserve%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20%20%20%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20%20%20%20%20%20%20%20.st0%7B%20%20%20%20%20%20%20%20%20%20%20%20fill%3A%23fff%3B%20%20%20%20%20%20%20%20%7D%20%3C%2Fstyle%3E%20%20%20%20%3Cpath%20class%3D%22st0%22%20d%3D%22M443.6%2C387.1L312.4%2C255.4l131.5-130c5.4-5.4%2C5.4-14.2%2C0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7%2C0-7.2%2C1.5-9.8%2C4%20%20L256%2C197.8L124.9%2C68.3c-2.6-2.6-6.1-4-9.8-4c-3.7%2C0-7.2%2C1.5-9.8%2C4L68%2C105.9c-5.4%2C5.4-5.4%2C14.2%2C0%2C19.6l131.5%2C130L68.4%2C387.1%20%20c-2.6%2C2.6-4.1%2C6.1-4.1%2C9.8c0%2C3.7%2C1.4%2C7.2%2C4.1%2C9.8l37.4%2C37.6c2.7%2C2.7%2C6.2%2C4.1%2C9.8%2C4.1c3.5%2C0%2C7.1-1.3%2C9.8-4.1L256%2C313.1l130.7%2C131.1%20%20c2.7%2C2.7%2C6.2%2C4.1%2C9.8%2C4.1c3.5%2C0%2C7.1-1.3%2C9.8-4.1l37.4-37.6c2.6-2.6%2C4.1-6.1%2C4.1-9.8C447.7%2C393.2%2C446.2%2C389.7%2C443.6%2C387.1z%22%2F%3E%3C%2Fsvg%3E\";\nvar CloseSquare = \"data:image/svg+xml,%3Csvg%20height%3D%22135.467mm%22%20style%3D%22shape-rendering%3AgeometricPrecision%3B%20text-rendering%3AgeometricPrecision%3B%20image-rendering%3AoptimizeQuality%3B%20fill-rule%3Aevenodd%3B%20clip-rule%3Aevenodd%22%20viewBox%3D%220%200%2013547%2013547%22%20width%3D%22135.467mm%22%20xml%3Aspace%3D%22preserve%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20%20%20%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%20%20%20%20%3Cdefs%3E%20%20%20%20%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20%20%20%20%20%20%20%20%20%20%20%20.fil0%20%7Bfill%3Anone%7D%20%20%20%20%20%20%20%20%20%20%20%20.fil1%20%7Bfill%3A%23fff%7D%20%20%20%20%20%20%20%20%3C%2Fstyle%3E%20%20%20%20%3C%2Fdefs%3E%20%20%20%20%3Cg%20id%3D%22Ebene_x0020_1%22%3E%20%20%20%20%20%20%20%20%3Cpolygon%20class%3D%22fil0%22%20points%3D%220%2C0%2013547%2C0%2013547%2C13547%200%2C13547%20%22%2F%3E%20%20%20%20%20%20%20%20%3Cpath%20class%3D%22fil1%22%20d%3D%22M714%2012832l12118%200%200%20-12117%20-12118%200%200%2012117zm4188%20-2990l1871%20-1871%201871%201871%201197%20-1197%20-1871%20-1871%201871%20-1871%20-1197%20-1197%20-1871%201871%20-1871%20-1871%20-1197%201197%201871%201871%20-1871%201871%201197%201197z%22%2F%3E%20%20%20%20%3C%2Fg%3E%3C%2Fsvg%3E\";\nvar DownArrow = \"data:image/svg+xml,%3Csvg%20height%3D%2232%22%20viewBox%3D%220%200%2032%2032%22%20width%3D%2232%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%20%20%20%3Cg%20id%3D%22background%22%3E%20%20%20%20%20%20%20%20%3Crect%20fill%3D%22none%22%20height%3D%2232%22%20width%3D%2232%22%2F%3E%20%20%20%20%3C%2Fg%3E%20%20%20%20%3Cg%20id%3D%22arrow_x5F_down%22%3E%20%20%20%20%20%20%20%20%3Cpolygon%20points%3D%222.002%2C10%2016.001%2C24%2030.002%2C10%20%20%22%2F%3E%20%20%20%20%3C%2Fg%3E%3C%2Fsvg%3E\";\nvar closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  React.useEffect(function () {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        clickEvent();\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n/**\r\n* Component that alerts if you click outside of it\r\n*/\n\n\nfunction OutsideAlerter(props) {\n  var wrapperRef = React.useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return React__default.createElement(\"div\", {\n    ref: wrapperRef\n  }, props.children);\n}\n\nvar Multiselect = /*#__PURE__*/function (_React$Component) {\n  _inherits(Multiselect, _React$Component);\n\n  function Multiselect(props) {\n    var _this;\n\n    _classCallCheck(this, Multiselect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Multiselect).call(this, props));\n    _this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n      showCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    }; // @ts-ignore\n\n    _this.optionTimeout = null; // @ts-ignore\n\n    _this.searchWrapper = React__default.createRef(); // @ts-ignore\n\n    _this.searchBox = React__default.createRef();\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onKeyPress = _this.onKeyPress.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.renderMultiselectContainer = _this.renderMultiselectContainer.bind(_assertThisInitialized(_this));\n    _this.renderSelectedList = _this.renderSelectedList.bind(_assertThisInitialized(_this));\n    _this.onRemoveSelectedItem = _this.onRemoveSelectedItem.bind(_assertThisInitialized(_this));\n    _this.toggelOptionList = _this.toggelOptionList.bind(_assertThisInitialized(_this));\n    _this.onArrowKeyNavigation = _this.onArrowKeyNavigation.bind(_assertThisInitialized(_this));\n    _this.onSelectItem = _this.onSelectItem.bind(_assertThisInitialized(_this));\n    _this.filterOptionsByInput = _this.filterOptionsByInput.bind(_assertThisInitialized(_this));\n    _this.removeSelectedValuesFromOptions = _this.removeSelectedValuesFromOptions.bind(_assertThisInitialized(_this));\n    _this.isSelectedValue = _this.isSelectedValue.bind(_assertThisInitialized(_this));\n    _this.fadeOutSelection = _this.fadeOutSelection.bind(_assertThisInitialized(_this));\n    _this.isDisablePreSelectedValues = _this.isDisablePreSelectedValues.bind(_assertThisInitialized(_this));\n    _this.renderGroupByOptions = _this.renderGroupByOptions.bind(_assertThisInitialized(_this));\n    _this.renderNormalOption = _this.renderNormalOption.bind(_assertThisInitialized(_this));\n    _this.listenerCallback = _this.listenerCallback.bind(_assertThisInitialized(_this));\n    _this.resetSelectedValues = _this.resetSelectedValues.bind(_assertThisInitialized(_this));\n    _this.getSelectedItems = _this.getSelectedItems.bind(_assertThisInitialized(_this));\n    _this.getSelectedItemsCount = _this.getSelectedItemsCount.bind(_assertThisInitialized(_this));\n    _this.hideOnClickOutside = _this.hideOnClickOutside.bind(_assertThisInitialized(_this));\n    _this.onCloseOptionList = _this.onCloseOptionList.bind(_assertThisInitialized(_this));\n    _this.isVisible = _this.isVisible.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Multiselect, [{\n    key: \"initialSetValue\",\n    value: function initialSetValue() {\n      var _this$props = this.props,\n          showCheckbox = _this$props.showCheckbox,\n          groupBy = _this$props.groupBy,\n          singleSelect = _this$props.singleSelect;\n      var options = this.state.options;\n\n      if (!showCheckbox && !singleSelect) {\n        this.removeSelectedValuesFromOptions(false);\n      } // if (singleSelect) {\n      //   this.hideOnClickOutside();\n      // }\n\n\n      if (groupBy) {\n        this.groupByOptions(options);\n      }\n    }\n  }, {\n    key: \"resetSelectedValues\",\n    value: function resetSelectedValues() {\n      var _this2 = this;\n\n      var unfilteredOptions = this.state.unfilteredOptions;\n      return new Promise(function (resolve) {\n        _this2.setState({\n          selectedValues: [],\n          preSelectedValues: [],\n          options: unfilteredOptions,\n          filteredOptions: unfilteredOptions\n        }, function () {\n          // @ts-ignore\n          resolve();\n\n          _this2.initialSetValue();\n        });\n      });\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function getSelectedItems() {\n      return this.state.selectedValues;\n    }\n  }, {\n    key: \"getSelectedItemsCount\",\n    value: function getSelectedItemsCount() {\n      return this.state.selectedValues.length;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initialSetValue(); // @ts-ignore\n\n      this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          options = _this$props2.options,\n          selectedValues = _this$props2.selectedValues;\n      var prevOptions = prevProps.options,\n          prevSelectedvalues = prevProps.selectedValues;\n\n      if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n        this.setState({\n          options: options,\n          filteredOptions: options,\n          unfilteredOptions: options\n        }, this.initialSetValue);\n      }\n\n      if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n        this.setState({\n          selectedValues: Object.assign([], selectedValues),\n          preSelectedValues: Object.assign([], selectedValues)\n        }, this.initialSetValue);\n      }\n    }\n  }, {\n    key: \"listenerCallback\",\n    value: function listenerCallback() {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // @ts-ignore\n      if (this.optionTimeout) {\n        // @ts-ignore\n        clearTimeout(this.optionTimeout);\n      } // @ts-ignore\n\n\n      this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n    } // Skipcheck flag - value will be true when the func called from on deselect anything.\n\n  }, {\n    key: \"removeSelectedValuesFromOptions\",\n    value: function removeSelectedValuesFromOptions(skipCheck) {\n      var _this$props3 = this.props,\n          isObject = _this$props3.isObject,\n          displayValue = _this$props3.displayValue,\n          groupBy = _this$props3.groupBy;\n      var _this$state = this.state,\n          _this$state$selectedV = _this$state.selectedValues,\n          selectedValues = _this$state$selectedV === void 0 ? [] : _this$state$selectedV,\n          unfilteredOptions = _this$state.unfilteredOptions,\n          options = _this$state.options;\n\n      if (!skipCheck && groupBy) {\n        this.groupByOptions(options);\n      }\n\n      if (!selectedValues.length && !skipCheck) {\n        return;\n      }\n\n      if (isObject) {\n        var _optionList = unfilteredOptions.filter(function (item) {\n          return selectedValues.findIndex(function (v) {\n            return v[displayValue] === item[displayValue];\n          }) === -1 ? true : false;\n        });\n\n        if (groupBy) {\n          this.groupByOptions(_optionList);\n        }\n\n        this.setState({\n          options: _optionList,\n          filteredOptions: _optionList\n        }, this.filterOptionsByInput);\n        return;\n      }\n\n      var optionList = unfilteredOptions.filter(function (item) {\n        return selectedValues.indexOf(item) === -1;\n      });\n      this.setState({\n        options: optionList,\n        filteredOptions: optionList\n      }, this.filterOptionsByInput);\n    }\n  }, {\n    key: \"groupByOptions\",\n    value: function groupByOptions(options) {\n      var groupBy = this.props.groupBy;\n      var groupedObject = options.reduce(function (r, a) {\n        var key = a[groupBy] || \"Others\";\n        r[key] = r[key] || [];\n        r[key].push(a);\n        return r;\n      }, Object.create({}));\n      this.setState({\n        groupedObject: groupedObject\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      var onSearch = this.props.onSearch;\n      this.setState({\n        inputValue: event.target.value\n      }, this.filterOptionsByInput);\n\n      if (onSearch) {\n        onSearch(event.target.value);\n      }\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(event) {\n      var onKeyPressFn = this.props.onKeyPressFn;\n\n      if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n      }\n    }\n  }, {\n    key: \"filterOptionsByInput\",\n    value: function filterOptionsByInput() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          options = _this$state2.options,\n          filteredOptions = _this$state2.filteredOptions,\n          inputValue = _this$state2.inputValue;\n      var _this$props4 = this.props,\n          isObject = _this$props4.isObject,\n          displayValue = _this$props4.displayValue;\n\n      if (isObject) {\n        options = filteredOptions.filter(function (i) {\n          return _this3.matchValues(i[displayValue], inputValue);\n        });\n      } else {\n        options = filteredOptions.filter(function (i) {\n          return _this3.matchValues(i, inputValue);\n        });\n      }\n\n      this.groupByOptions(options);\n      this.setState({\n        options: options\n      });\n    }\n  }, {\n    key: \"matchValues\",\n    value: function matchValues(value, search) {\n      if (this.props.caseSensitiveSearch) {\n        return value.indexOf(search) > -1;\n      }\n\n      if (value.toLowerCase) {\n        return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n      }\n\n      return value.toString().indexOf(search) > -1;\n    }\n  }, {\n    key: \"onArrowKeyNavigation\",\n    value: function onArrowKeyNavigation(e) {\n      var _this$state3 = this.state,\n          options = _this$state3.options,\n          highlightOption = _this$state3.highlightOption,\n          toggleOptionsList = _this$state3.toggleOptionsList,\n          inputValue = _this$state3.inputValue,\n          selectedValues = _this$state3.selectedValues;\n      var disablePreSelectedValues = this.props.disablePreSelectedValues;\n\n      if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n        this.onRemoveSelectedItem(selectedValues.length - 1);\n      }\n\n      if (!options.length) {\n        return;\n      }\n\n      if (e.keyCode === 38) {\n        if (highlightOption > 0) {\n          this.setState(function (previousState) {\n            return {\n              highlightOption: previousState.highlightOption - 1\n            };\n          });\n        } else {\n          this.setState({\n            highlightOption: options.length - 1\n          });\n        }\n      } else if (e.keyCode === 40) {\n        if (highlightOption < options.length - 1) {\n          this.setState(function (previousState) {\n            return {\n              highlightOption: previousState.highlightOption + 1\n            };\n          });\n        } else {\n          this.setState({\n            highlightOption: 0\n          });\n        }\n      } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n        if (highlightOption === -1) {\n          return;\n        }\n\n        this.onSelectItem(options[highlightOption]);\n      } // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n      // setTimeout(() => {\n      //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n      //   if (element) {\n      //     element.scrollIntoView();\n      //   }\n      // });\n\n    }\n  }, {\n    key: \"onRemoveSelectedItem\",\n    value: function onRemoveSelectedItem(item) {\n      var _this4 = this;\n\n      var _this$state4 = this.state,\n          selectedValues = _this$state4.selectedValues,\n          _this$state4$index = _this$state4.index,\n          index = _this$state4$index === void 0 ? 0 : _this$state4$index;\n      var _this$props5 = this.props,\n          onRemove = _this$props5.onRemove,\n          showCheckbox = _this$props5.showCheckbox,\n          displayValue = _this$props5.displayValue,\n          isObject = _this$props5.isObject;\n\n      if (isObject) {\n        index = selectedValues.findIndex(function (i) {\n          return i[displayValue] === item[displayValue];\n        });\n      } else {\n        index = selectedValues.indexOf(item);\n      }\n\n      selectedValues.splice(index, 1);\n      onRemove(selectedValues, item);\n      this.setState({\n        selectedValues: selectedValues\n      }, function () {\n        if (!showCheckbox) {\n          _this4.removeSelectedValuesFromOptions(true);\n        }\n      });\n\n      if (!this.props.closeOnSelect) {\n        // @ts-ignore\n        this.searchBox.current.focus();\n      }\n    }\n  }, {\n    key: \"onSelectItem\",\n    value: function onSelectItem(item) {\n      var _this5 = this;\n\n      var selectedValues = this.state.selectedValues;\n      var _this$props6 = this.props,\n          selectionLimit = _this$props6.selectionLimit,\n          onSelect = _this$props6.onSelect,\n          singleSelect = _this$props6.singleSelect,\n          showCheckbox = _this$props6.showCheckbox;\n\n      if (!this.state.keepSearchTerm) {\n        this.setState({\n          inputValue: ''\n        });\n      }\n\n      if (singleSelect) {\n        this.onSingleSelect(item);\n        onSelect([item], item);\n        return;\n      }\n\n      if (this.isSelectedValue(item)) {\n        this.onRemoveSelectedItem(item);\n        return;\n      }\n\n      if (selectionLimit == selectedValues.length) {\n        return;\n      }\n\n      selectedValues.push(item);\n      onSelect(selectedValues, item);\n      this.setState({\n        selectedValues: selectedValues\n      }, function () {\n        if (!showCheckbox) {\n          _this5.removeSelectedValuesFromOptions(true);\n        } else {\n          _this5.filterOptionsByInput();\n        }\n      });\n\n      if (!this.props.closeOnSelect) {\n        // @ts-ignore\n        this.searchBox.current.focus();\n      }\n    }\n  }, {\n    key: \"onSingleSelect\",\n    value: function onSingleSelect(item) {\n      this.setState({\n        selectedValues: [item],\n        toggleOptionsList: false\n      });\n    }\n  }, {\n    key: \"isSelectedValue\",\n    value: function isSelectedValue(item) {\n      var _this$props7 = this.props,\n          isObject = _this$props7.isObject,\n          displayValue = _this$props7.displayValue;\n      var selectedValues = this.state.selectedValues;\n\n      if (isObject) {\n        return selectedValues.filter(function (i) {\n          return i[displayValue] === item[displayValue];\n        }).length > 0;\n      }\n\n      return selectedValues.filter(function (i) {\n        return i === item;\n      }).length > 0;\n    }\n  }, {\n    key: \"renderOptionList\",\n    value: function renderOptionList() {\n      var _this$props8 = this.props,\n          groupBy = _this$props8.groupBy,\n          style = _this$props8.style,\n          emptyRecordMsg = _this$props8.emptyRecordMsg,\n          loading = _this$props8.loading,\n          _this$props8$loadingM = _this$props8.loadingMessage,\n          loadingMessage = _this$props8$loadingM === void 0 ? 'loading...' : _this$props8$loadingM;\n      var options = this.state.options;\n\n      if (loading) {\n        return React__default.createElement(\"ul\", {\n          className: \"optionContainer\",\n          style: style['optionContainer']\n        }, typeof loadingMessage === 'string' && React__default.createElement(\"span\", {\n          style: style['loadingMessage'],\n          className: \"notFound\"\n        }, loadingMessage), typeof loadingMessage !== 'string' && loadingMessage);\n      }\n\n      return React__default.createElement(\"ul\", {\n        className: \"optionContainer\",\n        style: style['optionContainer']\n      }, options.length === 0 && React__default.createElement(\"span\", {\n        style: style['notFound'],\n        className: \"notFound\"\n      }, emptyRecordMsg), !groupBy ? this.renderNormalOption() : this.renderGroupByOptions());\n    }\n  }, {\n    key: \"renderGroupByOptions\",\n    value: function renderGroupByOptions() {\n      var _this6 = this;\n\n      var _this$props9 = this.props,\n          _this$props9$isObject = _this$props9.isObject,\n          isObject = _this$props9$isObject === void 0 ? false : _this$props9$isObject,\n          displayValue = _this$props9.displayValue,\n          showCheckbox = _this$props9.showCheckbox,\n          style = _this$props9.style,\n          singleSelect = _this$props9.singleSelect;\n      var groupedObject = this.state.groupedObject;\n      return Object.keys(groupedObject).map(function (obj) {\n        return React__default.createElement(React__default.Fragment, {\n          key: obj\n        }, React__default.createElement(\"li\", {\n          className: \"groupHeading\",\n          style: style['groupHeading']\n        }, obj), groupedObject[obj].map(function (option, i) {\n          var isSelected = _this6.isSelectedValue(option);\n\n          return React__default.createElement(\"li\", {\n            key: \"option\".concat(i),\n            style: style['option'],\n            className: \"groupChildEle option \".concat(isSelected ? 'selected' : '', \" \").concat(_this6.fadeOutSelection(option) ? 'disableSelection' : '', \" \").concat(_this6.isDisablePreSelectedValues(option) ? 'disableSelection' : ''),\n            onClick: function onClick() {\n              return _this6.onSelectItem(option);\n            }\n          }, showCheckbox && !singleSelect && React__default.createElement(\"input\", {\n            type: \"checkbox\",\n            className: 'checkbox',\n            readOnly: true,\n            checked: isSelected\n          }), isObject ? option[displayValue] : (option || '').toString());\n        }));\n      });\n    }\n  }, {\n    key: \"renderNormalOption\",\n    value: function renderNormalOption() {\n      var _this7 = this;\n\n      var _this$props10 = this.props,\n          _this$props10$isObjec = _this$props10.isObject,\n          isObject = _this$props10$isObjec === void 0 ? false : _this$props10$isObjec,\n          displayValue = _this$props10.displayValue,\n          showCheckbox = _this$props10.showCheckbox,\n          style = _this$props10.style,\n          singleSelect = _this$props10.singleSelect;\n      var highlightOption = this.state.highlightOption;\n      return this.state.options.map(function (option, i) {\n        var isSelected = _this7.isSelectedValue(option);\n\n        return React__default.createElement(\"li\", {\n          key: \"option\".concat(i),\n          style: style['option'],\n          className: \"option \".concat(isSelected ? 'selected' : '', \" \").concat(highlightOption === i ? \"highlightOption highlight\" : \"\", \" \").concat(_this7.fadeOutSelection(option) ? 'disableSelection' : '', \" \").concat(_this7.isDisablePreSelectedValues(option) ? 'disableSelection' : ''),\n          onClick: function onClick() {\n            return _this7.onSelectItem(option);\n          }\n        }, showCheckbox && !singleSelect && React__default.createElement(\"input\", {\n          type: \"checkbox\",\n          readOnly: true,\n          className: \"checkbox\",\n          checked: isSelected\n        }), isObject ? option[displayValue] : (option || '').toString());\n      });\n    }\n  }, {\n    key: \"renderSelectedList\",\n    value: function renderSelectedList() {\n      var _this8 = this;\n\n      var _this$props11 = this.props,\n          _this$props11$isObjec = _this$props11.isObject,\n          isObject = _this$props11$isObjec === void 0 ? false : _this$props11$isObjec,\n          displayValue = _this$props11.displayValue,\n          style = _this$props11.style,\n          singleSelect = _this$props11.singleSelect,\n          customCloseIcon = _this$props11.customCloseIcon;\n      var _this$state5 = this.state,\n          selectedValues = _this$state5.selectedValues,\n          closeIconType = _this$state5.closeIconType;\n      return selectedValues.map(function (value, index) {\n        return React__default.createElement(\"span\", {\n          className: \"chip  \".concat(singleSelect && 'singleChip', \" \").concat(_this8.isDisablePreSelectedValues(value) && 'disableSelection'),\n          key: index,\n          style: style['chips']\n        }, !isObject ? (value || '').toString() : value[displayValue], !_this8.isDisablePreSelectedValues(value) && (!customCloseIcon ? React__default.createElement(\"img\", {\n          className: \"icon_cancel closeIcon\",\n          src: closeIconType,\n          onClick: function onClick() {\n            return _this8.onRemoveSelectedItem(value);\n          }\n        }) : React__default.createElement(\"i\", {\n          className: \"custom-close\",\n          onClick: function onClick() {\n            return _this8.onRemoveSelectedItem(value);\n          }\n        }, customCloseIcon)));\n      });\n    }\n  }, {\n    key: \"isDisablePreSelectedValues\",\n    value: function isDisablePreSelectedValues(value) {\n      var _this$props12 = this.props,\n          isObject = _this$props12.isObject,\n          disablePreSelectedValues = _this$props12.disablePreSelectedValues,\n          displayValue = _this$props12.displayValue;\n      var preSelectedValues = this.state.preSelectedValues;\n\n      if (!disablePreSelectedValues || !preSelectedValues.length) {\n        return false;\n      }\n\n      if (isObject) {\n        return preSelectedValues.filter(function (i) {\n          return i[displayValue] === value[displayValue];\n        }).length > 0;\n      }\n\n      return preSelectedValues.filter(function (i) {\n        return i === value;\n      }).length > 0;\n    }\n  }, {\n    key: \"fadeOutSelection\",\n    value: function fadeOutSelection(item) {\n      var _this$props13 = this.props,\n          selectionLimit = _this$props13.selectionLimit,\n          showCheckbox = _this$props13.showCheckbox,\n          singleSelect = _this$props13.singleSelect;\n\n      if (singleSelect) {\n        return;\n      }\n\n      var selectedValues = this.state.selectedValues;\n\n      if (selectionLimit == -1) {\n        return false;\n      }\n\n      if (selectionLimit != selectedValues.length) {\n        return false;\n      }\n\n      if (selectionLimit == selectedValues.length) {\n        if (!showCheckbox) {\n          return true;\n        } else {\n          if (this.isSelectedValue(item)) {\n            return false;\n          }\n\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"toggelOptionList\",\n    value: function toggelOptionList() {\n      this.setState({\n        toggleOptionsList: !this.state.toggleOptionsList,\n        highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n      });\n    }\n  }, {\n    key: \"onCloseOptionList\",\n    value: function onCloseOptionList() {\n      this.setState({\n        toggleOptionsList: false,\n        highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n        inputValue: ''\n      });\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      if (this.state.toggleOptionsList) {\n        // @ts-ignore\n        clearTimeout(this.optionTimeout);\n      } else {\n        this.toggelOptionList();\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.setState({\n        inputValue: ''\n      }, this.filterOptionsByInput); // @ts-ignore\n\n      this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible(elem) {\n      return !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n    }\n  }, {\n    key: \"hideOnClickOutside\",\n    value: function hideOnClickOutside() {\n      var _this9 = this;\n\n      var element = document.getElementsByClassName('multiselect-container')[0];\n\n      var outsideClickListener = function outsideClickListener(event) {\n        if (element && !element.contains(event.target) && _this9.isVisible(element)) {\n          _this9.toggelOptionList();\n        }\n      };\n\n      document.addEventListener('click', outsideClickListener);\n    }\n  }, {\n    key: \"renderMultiselectContainer\",\n    value: function renderMultiselectContainer() {\n      var _this$state6 = this.state,\n          inputValue = _this$state6.inputValue,\n          toggleOptionsList = _this$state6.toggleOptionsList,\n          selectedValues = _this$state6.selectedValues;\n      var _this$props14 = this.props,\n          placeholder = _this$props14.placeholder,\n          style = _this$props14.style,\n          singleSelect = _this$props14.singleSelect,\n          id = _this$props14.id,\n          name = _this$props14.name,\n          hidePlaceholder = _this$props14.hidePlaceholder,\n          disable = _this$props14.disable,\n          showArrow = _this$props14.showArrow,\n          className = _this$props14.className,\n          customArrow = _this$props14.customArrow;\n      return React__default.createElement(\"div\", {\n        className: \"multiselect-container multiSelectContainer \".concat(disable ? \"disable_ms\" : '', \" \").concat(className || ''),\n        id: id || 'multiselectContainerReact',\n        style: style['multiselectContainer']\n      }, React__default.createElement(\"div\", {\n        className: \"search-wrapper searchWrapper \".concat(singleSelect ? 'singleSelect' : ''),\n        ref: this.searchWrapper,\n        style: style['searchBox'],\n        onClick: singleSelect ? this.toggelOptionList : function () {}\n      }, this.renderSelectedList(), React__default.createElement(\"input\", {\n        type: \"text\",\n        ref: this.searchBox,\n        className: \"searchBox \".concat(singleSelect && selectedValues.length ? 'display-none' : ''),\n        id: \"\".concat(id || 'search', \"_input\"),\n        name: \"\".concat(name || 'search_name', \"_input\"),\n        onChange: this.onChange,\n        onKeyPress: this.onKeyPress,\n        value: inputValue,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        placeholder: singleSelect && selectedValues.length || hidePlaceholder && selectedValues.length ? '' : placeholder,\n        onKeyDown: this.onArrowKeyNavigation,\n        style: style['inputField'],\n        autoComplete: \"off\",\n        disabled: singleSelect || disable\n      }), (singleSelect || showArrow) && React__default.createElement(React__default.Fragment, null, customArrow ? React__default.createElement(\"span\", {\n        className: \"icon_down_dir\"\n      }, customArrow) : React__default.createElement(\"img\", {\n        src: DownArrow,\n        className: \"icon_cancel icon_down_dir\"\n      }))), React__default.createElement(\"div\", {\n        className: \"optionListContainer \".concat(toggleOptionsList ? 'displayBlock' : 'displayNone'),\n        onMouseDown: function onMouseDown(e) {\n          e.preventDefault();\n        }\n      }, this.renderOptionList()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React__default.createElement(OutsideAlerter, {\n        outsideClick: this.onCloseOptionList\n      }, this.renderMultiselectContainer());\n    }\n  }]);\n\n  return Multiselect;\n}(React__default.Component);\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n  groupBy: \"\",\n  style: {},\n  emptyRecordMsg: \"No Options Available\",\n  onSelect: function onSelect() {},\n  onRemove: function onRemove() {},\n  onKeyPressFn: function onKeyPressFn() {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined\n};\nexports.Multiselect = Multiselect;\nexports.default = Multiselect;","map":null,"metadata":{},"sourceType":"script"}